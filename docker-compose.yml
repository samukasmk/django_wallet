version: '3.9'

services:
  django:
    image: django_wallet_production
    build:
      context: .
      args:
        INSTALL_LIBS: production
    command: gunicorn core.wsgi:application --bind 0.0.0.0:5000
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DATABASE_HOST=postgres
      - DEBUG=FALSE
    volumes:
      - .:/opt/django_wallet
      - django_static_volume:/opt/django_files/static
      - django_media_volume:/opt/django_files/media
    restart: on-failure
    depends_on:
      - postgres
    networks:
      - local

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - django_postgres:/var/lib/postgresql/data
    restart: on-failure
    environment:
      - POSTGRES_USER=django_wallet
      - POSTGRES_PASSWORD=P4s5W0RD
      - POSTGRES_DB=django_wallet
    networks:
      - local

  nginx:
    image: nginx:stable
    volumes:
      - ./.nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - django_static_volume:/opt/django_files/static
      - django_media_volume:/opt/django_files/media
    restart: on-failure
    ports:
      - 80:80
    networks:
      - local

  build-environment:
    image: django_wallet_production
    command: make build-environment
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings
      - DATABASE_HOST=postgres
      - DEBUG=FALSE
    volumes:
      - .:/opt/django_wallet
      - django_static_volume:/opt/django_files/static
      - django_media_volume:/opt/django_files/media
    depends_on:
      - postgres
    networks:
      - local

  unit-tests:
    image: django_wallet_development
    build:
      context: .
      args:
        INSTALL_LIBS: development
    command: make test
    environment:
      - DJANGO_SETTINGS_MODULE=core.testing
      - DEBUG=TRUE
    volumes:
      - .:/opt/django_wallet
    scale: 0 # this parameter disables this service to run on `docker-compose up` command
             # to run the unit-tests please execute manually the command: `docker-compose run --rm unit-tests`

volumes:
  django_postgres:
  django_static_volume:
  django_media_volume:

networks:
  local:
    driver: bridge